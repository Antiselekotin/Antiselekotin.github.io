{"version":3,"sources":["components/error/star.png","components/header/index.js","components/header/header.js","service/swapi-servise.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/error-boundry/error-boundry.js","components/row/index.js","components/row/row.js","components/hoc-helper/with-data.js","components/hoc-helper/with-image.js","components/item-list/item-list.js","components/sw-components/item-lists.js","components/item-description/index.js","components/error-button/error-button.js","components/item-description/item-description.js","components/description-helper/index.js","components/description-helper/description-helper.js","components/sw-components/item-descriptions.js","components/pages/people-page.js","components/pages/planets-page.js","components/pages/starships-page.js","components/pages/secret-page.js","components/pages/login-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","Header","className","to","Component","SwapiService","_apiBase","_imageBase","_getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","people","results","map","person","_transformPerson","getPerson","id","getAllPlanets","planets","planet","_transformPlanet","getPlanet","getAllStarships","starship","_transformStarship","getStarship","getPersonUrl","getPlanetUrl","getStarshipUrl","_findId","item","match","name","population","rotationPeriod","rotation_period","diameter","gender","birthYear","birth_year","eyeColor","eye_color","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","Spinner","ErrorMessage","src","icon","alt","RandomPlanet","state","loading","error","swapi","onPlanetLoaded","setState","onError","updatePlanet","Math","floor","random","then","catch","this","internal","setInterval","clearInterval","interval","errorMessege","spinner","view","PlanetView","Fragment","ErrorBoundry","props","children","Row","left","right","WithData","View","GetAPIList","itemList","data","WithImage","getAPIData","getImg","imageUrl","updateItem","itemId","prevProps","ItemList","seter","renderItem","realList","key","onClick","ListWithFunction","fn","Wrapped","PersonList","i","PlanetList","StarshipList","ItemDescription","React","Children","child","console","log","cloneElement","DescriptionHelper","label","filter","PersonValue","PlanetValue","StarshipValue","PersonDescription","PlanetDescription","StarshipDescription","withRouter","history","push","params","PlanetsPage","currentItem","setItem","SecretPage","isLoggedIn","LoginPage","Login","App","hasError","loggedIn","onLogin","path","render","exact","component","PeoplePage","StarshipsPage","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.ad59dba0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.c6f8cd72.png\";","import Header from \"./header\";\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport './header.scss'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className='header'>\r\n                <h1>\r\n                    <Link to='/'>Star DB</Link>\r\n                </h1>\r\n                <ul className='header__list'>\r\n                    <li>\r\n                        <Link to='/people/'>People</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/planets/'>Planets</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/starships/'>StarShips</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/login/'>Login</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/secret/'>Secret</Link>\r\n                    </li>\r\n                </ul>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","export default class SwapiService {\r\n    _apiBase = 'https://swapi.dev/api/';\r\n    _imageBase = 'https://starwars-visualguide.com/assets/img/';\r\n    _getResource = async (url) => {\r\n        const res = await fetch(this._apiBase + url);\r\n        if (!res.ok) {\r\n            throw new Error(`Something went wrong\\n Error status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    };\r\n    getAllPeople = async () => {\r\n        const people = await this._getResource(`people/`);\r\n         return people.results.map((person) => this._transformPerson(person));\r\n    };\r\n    getPerson = async (id) => {\r\n        const person = await this._getResource(`people/${id}/`);\r\n        return this._transformPerson(person)\r\n    };\r\n    getAllPlanets = async () => {\r\n        const planets = await this._getResource(`planets/`);\r\n        return planets.results.map((planet) => this._transformPlanet(planet));\r\n    };\r\n    getPlanet = async (id) => {\r\n        const planet = await this._getResource(`planets/${id}`);\r\n        return this._transformPlanet(planet)\r\n    };\r\n    getAllStarships = async () => {\r\n        const starship = await this._getResource(`starships/`);\r\n        return starship.results.map((starship) => this._transformStarship(starship));\r\n    };\r\n    getStarship = async (id) => {\r\n        const starship = await this._getResource(`starships/${id}`);\r\n        return this._transformStarship(starship)\r\n    };\r\n    getPersonUrl = (id) => {\r\n        return `${this._imageBase}characters/${id}.jpg`;\r\n    };\r\n    getPlanetUrl = (id) => {\r\n        return `${this._imageBase}planets/${id}.jpg`;\r\n    };\r\n    getStarshipUrl = (id) => {\r\n        return `${this._imageBase}starships/${id}.jpg`;\r\n    };\r\n    _findId = (item) => {\r\n        const key = /\\d?\\d/;\r\n        return  item.url.match(key)[0];\r\n    };\r\n    _transformPlanet = (planet) => {\r\n        return {\r\n            id: this._findId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod: planet.rotation_period,\r\n            diameter: planet.diameter\r\n        }\r\n    };\r\n    _transformPerson = (person) => {\r\n        return{\r\n            id: this._findId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            birthYear: person.birth_year,\r\n            eyeColor: person.eye_color\r\n        }\r\n    };\r\n    _transformStarship = (starship) => {\r\n        return {\r\n            id: this._findId(starship),\r\n            name: starship.name,\r\n            model: starship.model,\r\n            manufacturer: starship.manufacturer,\r\n            costInCredits: starship.cost_in_credits,\r\n            length: starship.length,\r\n            crew: starship.crew,\r\n            passengers: starship.passengers,\r\n            cargoCapacity: starship.cargo_capacity\r\n        }\r\n    }\r\n}","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\n\r\nimport './spinner.scss'\r\n\r\nexport default class Spinner extends Component {\r\n render() {\r\n     return (\r\n         <div className=\"loadingio-spinner-double-ring-612eboasb6g spinner\">\r\n             <div className=\"ldio-kg3b4wsbc6a\">\r\n                 <div></div>\r\n                 <div></div>\r\n                 <div>\r\n                     <div></div>\r\n                 </div>\r\n                 <div>\r\n                     <div></div>\r\n                 </div>\r\n             </div>\r\n         </div>\r\n     )\r\n }\r\n}","import ErrorMessage from \"./error\";\r\n\r\nexport default ErrorMessage","import React from \"react\";\r\n\r\nimport './error.scss'\r\nimport icon from './star.png'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className=\"error-message\">\r\n            <img src={icon} alt=\"error logo\"/>\r\n            <div className=\"error-message__boom\">\r\n                boom!!!\r\n            </div>\r\n            <div>\r\n                Something has gone terribly wrong\r\n                <br/>\r\n                (but we already send droids to fix it)\r\n                <br/>\r\n                Please reload this page\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default ErrorMessage","import React, { Component } from \"react\";\r\nimport SwapiService from \"../../service/swapi-servise\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorMessage from \"../error\";\r\n\r\nimport './random-planet.scss'\r\n\r\nexport default class RandomPlanet extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            planet: {},\r\n            loading: true,\r\n            error: false\r\n        };\r\n        this.swapi = new SwapiService();\r\n\r\n        this.onPlanetLoaded = (planet) => {\r\n            this.setState({planet,\r\n                loading: false})\r\n        };\r\n\r\n        this.onError = () => {\r\n            this.setState({\r\n                error: true,\r\n                loading: false})\r\n        };\r\n\r\n        this.updatePlanet = () => {\r\n            const id = Math.floor(Math.random()*20 + 2);\r\n            this.swapi\r\n                .getPlanet(id)\r\n                .then(this.onPlanetLoaded)\r\n                .catch(this.onError)\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.updatePlanet();\r\n        this.internal = setInterval(this.updatePlanet, 7000);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        const { planet, loading, error } = this.state;\r\n\r\n        const errorMessege = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const view = !(loading || error) ? <PlanetView planet={planet}/> : null;\r\n\r\n         return (\r\n            <div className='random-planet'>\r\n                {errorMessege}\r\n                {spinner}\r\n                {view}\r\n           </div>\r\n         )\r\n    }\r\n}\r\n\r\nconst PlanetView = ({planet}) => {\r\n    const {id ,name, population,\r\n        rotationPeriod, diameter} = planet;\r\n    return (\r\n    <React.Fragment>\r\n        <img className='random-planet__img' src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n             alt=\"planet\"/>\r\n        <div>\r\n            <div className='random-planet__header'>{name}</div>\r\n            <ul className='list-group list-group-flush random-planet__info'>\r\n                <li className=\"random-planet__data-item list-group-item\">\r\n                    Population: {population}\r\n                </li>\r\n                <li className=\"random-planet__data-item list-group-item\">\r\n                    Rotation Period: {rotationPeriod}\r\n                </li>\r\n                <li className=\"random-planet__data-item list-group-item\">\r\n                    Diameter: {diameter}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n};","import RandomPlanet from \"./random-planet\";\r\n\r\nexport default RandomPlanet;","import React, {Component} from \"react\";\r\nimport ErrorMessage from \"../error\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error: false\r\n        }\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n        return this.props.children\r\n    }\r\n}","import Row from \"./row\";\r\n\r\nexport default Row","import React from \"react\";\r\n\r\nconst Row = ({left, right}) => {\r\n    return (\r\n        <div className='row mb-2'>\r\n            <div className=\"col-lg-6 col-sm-12\">\r\n                {left}\r\n            </div>\r\n            <div className=\"col-lg-6 col-sm-12\">\r\n                {right}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Row;","import React, {Component} from \"react\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorBoundry from \"../error-boundry/error-boundry\";\r\n\r\nconst WithData = (View, GetAPIList) => {\r\n    return class extends Component {\r\n\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                itemList: null,\r\n            };\r\n        }\r\n        componentDidMount() {\r\n            GetAPIList()\r\n                .then((itemList) => {\r\n                    this.setState({itemList})\r\n                })\r\n                .catch(this.onError);\r\n        }\r\n        render() {\r\n            const { itemList } = this.state;\r\n            if(!itemList) {\r\n                return <Spinner />\r\n            }\r\n            return (\r\n                <ErrorBoundry>\r\n                    <View {...this.props} data={this.state}/>\r\n                </ErrorBoundry>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nexport default WithData;\r\n","import React, {Component} from \"react\";\r\nimport ErrorMessage from \"../error\";\r\nimport Spinner from \"../spinner\";\r\nimport SwapiService from \"../../service/swapi-servise\";\r\nimport ErrorBoundry from \"../error-boundry/error-boundry\";\r\n\r\nconst WithImage = (View, getAPIData, getImg, children) => {\r\n    return class extends Component {\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                item: null,\r\n                error: false,\r\n                loading: true,\r\n                imageUrl: null\r\n            };\r\n            this.swapi = new SwapiService();\r\n            this.onError = () => {\r\n                this.setState({error: true, loading: false})\r\n            };\r\n            this.updateItem = () => {\r\n                this.setState({loading: true});\r\n                const { itemId } = this.props;\r\n                if(!itemId) {\r\n                    return;\r\n                }\r\n                getAPIData(itemId)\r\n                    .then((item) => this.setState({item, loading: false}))\r\n                    .catch(this.onError);\r\n                this.setState({imageUrl: getImg(itemId)})\r\n            };\r\n\r\n        }\r\n        componentDidMount() {\r\n            this.updateItem();\r\n        }\r\n        componentDidUpdate(prevProps) {\r\n            if(this.props.itemId !== prevProps.itemId) {\r\n                this.updateItem();\r\n            }\r\n        }\r\n        render() {\r\n            if(this.state.error) {\r\n                return <ErrorMessage />\r\n            }\r\n            if(!this.state.item) {\r\n                return <span className=\"people-description__waiter\">Choose an item</span>\r\n            }\r\n            if(this.state.loading) {\r\n                return <Spinner/>\r\n            }\r\n            return (\r\n                <ErrorBoundry>\r\n                    <View {...this.props} {...this.state} children={children}/>\r\n                </ErrorBoundry>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nexport default WithImage;\r\n","import React from \"react\";\r\nimport './item-list.scss'\r\n\r\n\r\nconst ItemList = (props) => {\r\n\r\n        const { data: { itemList }, seter, children: renderItem } = props;\r\n        const realList = itemList.map((item) => {\r\n            const { id } = item;\r\n            return <li className='list-group-item' key={id}\r\n            onClick={() => { seter(id) }}>\r\n                {renderItem(item)}\r\n            </li>\r\n        });\r\n        return (\r\n            <ul className='list-group item-list'>\r\n                { realList }\r\n            </ul>\r\n        )\r\n};\r\n\r\nexport default ItemList\r\n","import React from \"react\";\r\nimport { WithData } from \"../hoc-helper\";\r\nimport ItemList from \"../item-list/item-list\";\r\nimport SwapiService from \"../../service/swapi-servise\";\r\n\r\nconst {\r\n    getAllPeople,\r\n    getAllPlanets,\r\n    getAllStarships} = new SwapiService();\r\n\r\nconst ListWithFunction = (fn) => (Wrapped) => {\r\n    return (props) => {\r\n        return <Wrapped {...props} >{fn}</Wrapped>\r\n    }\r\n};\r\nconst renderPerson = (i) => {\r\n    return `${i.name} (${i.gender} ${i.birthYear})`\r\n};\r\nconst renderPlanet = (i) => `${i.name} (diameter: ${i.diameter})`;\r\nconst renderStarship = (i) => `${i.name} (Model: ${i.model})`;\r\n\r\nconst PersonList = WithData(ListWithFunction(renderPerson)(ItemList), getAllPeople);\r\nconst PlanetList = WithData(ListWithFunction(renderPlanet)(ItemList), getAllPlanets);\r\nconst StarshipList = WithData(ListWithFunction(renderStarship)(ItemList), getAllStarships);\r\nexport {\r\n    PersonList,\r\n    PlanetList,\r\n    StarshipList\r\n};\r\n","import ItemDescription from \"./item-description\";\r\n\r\nexport default ItemDescription;","import React, { Component } from \"react\";\r\n\r\nexport default class ErrorButton extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            renderError: false\r\n        };\r\n    }\r\n    render() {\r\n        if(this.state.renderError) {\r\n            this.foo.none()\r\n        }\r\n        return (\r\n            <button className=\"btn btn-danger btn-block\"\r\n            onClick={() => this.setState({renderError: true})}>Throw an error</button>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport './item-description.scss'\r\nimport ErrorButton from \"../error-button\";\r\n\r\nconst ItemDescription = (props) => {\r\n    const { name } = props.item;\r\n    return (\r\n        <div className='card people-description'>\r\n            <div className='card-img-left people-description__img'>\r\n                <img src={props.imageUrl}\r\n                     alt=\"R2-D2\"/>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h4 className='people-description__header'>{name}</h4>\r\n                <ul className='people-description__list list-group list-group-flush'>\r\n                    {\r\n                        React.Children.map(props.children, (child => {\r\n                            console.log(props.children);\r\n                            return  React.cloneElement(child, { item: props.item })\r\n                        }))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ItemDescription;\r\n","import DescriptionHelper from \"./description-helper\";\r\n\r\nexport default DescriptionHelper;","import React from \"react\";\r\n\r\nconst DescriptionHelper = (props) => {\r\n    const {item = '', label = '', filter = ''} = props;\r\n    return (\r\n        <li className='list-group-item'>\r\n            {label}: {item[filter]}\r\n        </li>\r\n    )\r\n};\r\nexport default DescriptionHelper;","import React from \"react\";\r\nimport {WithImage} from \"../hoc-helper\";\r\nimport ItemDescription from \"../item-description\";\r\nimport SwapiService from \"../../service/swapi-servise\";\r\nimport DescriptionHelper from \"../description-helper\";\r\n\r\nconst { getPerson,\r\n    getPlanet,\r\n    getStarship,\r\n    getPersonUrl,\r\n    getPlanetUrl,\r\n    getStarshipUrl} = new SwapiService();\r\n\r\nconst PersonValue = [\r\n        <DescriptionHelper label='Gender' filter='gender'/>,\r\n        <DescriptionHelper label='Eye Color' filter='eyeColor'/>,\r\n        <DescriptionHelper label='Birth Year' filter='birthYear'/>\r\n    ];\r\nconst PlanetValue = [\r\n    <DescriptionHelper label='Diameter' filter='diameter'/>,\r\n    <DescriptionHelper label='Rotation Period' filter='rotationPeriod'/>,\r\n    <DescriptionHelper label='Population' filter='population'/>\r\n];\r\nconst StarshipValue = [\r\n    <DescriptionHelper label='Model' filter='model'/>,\r\n    <DescriptionHelper label='Price' filter='costInCredits'/>,\r\n    <DescriptionHelper label='Crew' filter='crew'/>\r\n];\r\n\r\n\r\n\r\nconst PersonDescription = WithImage(ItemDescription, getPerson, getPersonUrl, PersonValue);\r\nconst PlanetDescription = WithImage(ItemDescription, getPlanet, getPlanetUrl, PlanetValue);\r\nconst StarshipDescription = WithImage(ItemDescription, getStarship, getStarshipUrl, StarshipValue);\r\n\r\nexport {\r\n    PersonDescription,\r\n    PlanetDescription,\r\n    StarshipDescription\r\n}\r\n","import React from \"react\";\r\nimport Row from \"../row\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport { PersonDescription } from \"../sw-components\";\r\nimport  { PersonList } from \"../sw-components\";\r\n\r\nconst PeoplePage = ({ history, match }) => {\r\n    return (\r\n        <Row left={<PersonList seter={(itemId) => {\r\n            history.push(itemId);\r\n        }}/>}\r\n             right={<PersonDescription itemId={match.params.id}/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PeoplePage)\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Row from \"../row\";\r\nimport { PlanetList } from \"../sw-components\";\r\nimport  { PlanetDescription } from \"../sw-components\";\r\n\r\nexport default class PlanetsPage extends Component\r\n{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentItem: null\r\n        };\r\n        this.setItem = (currentItem) => {\r\n            this.setState({currentItem})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Row left={<PlanetList seter={this.setItem}/>}\r\n                 right={<PlanetDescription itemId={this.state.currentItem}/>}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport  { StarshipList } from \"../sw-components\";\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst StarshipsPage = ({ history }) => {\r\n    return (\r\n        <StarshipList seter={(itemId) => {\r\n            history.push(itemId)\r\n        }}/>\r\n    )\r\n};\r\n\r\nexport default withRouter(StarshipsPage);\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst SecretPage = ({ isLoggedIn }) => {\r\n  if (isLoggedIn) {\r\n      return (\r\n          <div className='jumbotron'>\r\n              <h2>This page is a full of secrets</h2>\r\n          </div>\r\n      )\r\n  }\r\n  return <Redirect to='/login/'/>\r\n};\r\n\r\nexport default SecretPage;\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst LoginPage = ({ isLoggedIn, Login }) => {\r\n    if (isLoggedIn) {\r\n            return <Redirect to='/'/>\r\n    }\r\n    return (\r\n        <div className='jumbotron'>\r\n            <h3>Click to login</h3>\r\n            <button\r\n                className='btn badge-info'\r\n                onClick={Login}>Login</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoginPage\r\n","import App from \"./app\";\r\n\r\nexport default App;","import './bootstrap.min.scss'\r\nimport React, { Component } from \"react\";\r\nimport Header from \"../header\";\r\nimport RandomPlanet from \"../random-planet\";\r\nimport './app.scss'\r\nimport ErrorMessage from \"../error\";\r\nimport ErrorBoundry from \"../error-boundry/error-boundry\";\r\nimport {LoginPage, PeoplePage, PlanetsPage, SecretPage, StarshipsPage} from \"../pages\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport {StarshipDescription} from \"../sw-components\";\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hasError: false,\r\n            loggedIn: false\r\n        };\r\n        this.onLogin = () => {\r\n            this.setState({\r\n                loggedIn: true\r\n            })\r\n        }\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        const { hasError } = this.state;\r\n        if(hasError) {\r\n            return <ErrorMessage />\r\n        }\r\n        return (\r\n            <ErrorBoundry>\r\n                <BrowserRouter>\r\n                    <Header />\r\n                    <RandomPlanet />\r\n                    <Switch>\r\n                        <Route path='/'\r\n                               render={() => <h1>Welcome to StarDB</h1>}\r\n                               exact />\r\n                        <Route path='/people/:id?' component={PeoplePage}/>\r\n                        <Route path='/planets/' component={PlanetsPage}/>\r\n                        <Route path='/starships/' exact component={StarshipsPage}/>\r\n                        <Route path='/starships/:id'\r\n                               render={({ match }) =><StarshipDescription itemId={match.params.id}/>}/>\r\n                        <Route path='/login/'\r\n                               render={() => <LoginPage\r\n                                   isLoggedIn={this.state.loggedIn}\r\n                                   Login={this.onLogin}\r\n                               />}\r\n                        />\r\n                        <Route path='/secret/'\r\n                               render={() => <SecretPage isLoggedIn={this.state.loggedIn}/>}\r\n                        />\r\n                        <Route\r\n                            render={() => <h2>Page not found</h2>}/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n\r\n            </ErrorBoundry>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/app\";\r\n\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'))"],"sourceRoot":""}